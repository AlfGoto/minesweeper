"use strict";var C=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var M=(t,a)=>{for(var e in a)C(t,e,{get:a[e],enumerable:!0})},J=(t,a,e,c)=>{if(a&&typeof a=="object"||typeof a=="function")for(let o of G(a))!U.call(t,o)&&o!==e&&C(t,o,{get:()=>a[o],enumerable:!(c=D(a,o))||c.enumerable});return t};var B=t=>J(C({},"__esModule",{value:!0}),t);var L={};M(L,{handler:()=>F});module.exports=B(L);var O=require("@aws-sdk/client-dynamodb"),m=require("@aws-sdk/lib-dynamodb"),W=new O.DynamoDBClient({}),p=m.DynamoDBDocumentClient.from(W),f=process.env.TABLE_NAME,z=process.env.STATUS_TIME_INDEX,u={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type,Authorization"},F=async t=>{if(t.httpMethod==="OPTIONS")return{statusCode:200,headers:u,body:JSON.stringify({message:"CORS enabled"})};try{let a=t.path.toLowerCase();if(a.includes("/leaderboard")){if(a.includes("/context/")){let e=t.pathParameters?.userId;return e?await k(e):{statusCode:400,headers:u,body:JSON.stringify({message:"User ID is required"})}}return await q(t)}if(a.includes("/stats/")){let e=t.pathParameters?.userId;return e?await V(e):{statusCode:400,headers:u,body:JSON.stringify({message:"User ID is required"})}}if(a.includes("/games")){if(t.httpMethod==="GET")return await K(t);if(t.httpMethod==="POST")return await _(t)}return{statusCode:404,headers:u,body:JSON.stringify({message:"Endpoint not found"})}}catch(a){return console.error("Error:",a),{statusCode:500,headers:u,body:JSON.stringify({message:"Internal server error",error:a instanceof Error?a.message:String(a)})}}};async function _(t){if(!t.body)return{statusCode:400,headers:u,body:JSON.stringify({message:"Request body is required"})};let a=JSON.parse(t.body),{userId:e,status:c,time:o,successTime:S,winTime:l,userName:s,userImage:i,usedFlags:d,bombsExploded:I,noFlagWin:r,timePlayed:y}=a;if(!e||!c)return{statusCode:400,headers:u,body:JSON.stringify({message:"userId and status are required"})};let b=new Date().toISOString(),E=Number(o||S||l||0),P=Math.floor(Date.now()/1e3)+90*24*60*60,T=`USER#${e}`,A=`DATE#${b}`,x={userId:T,timestamp:A,rawUserId:e,status:c,time:E,date:b,ttl:P,userName:s||e,userImage:i||null,usedFlags:d!==void 0?d:null,bombsExploded:I!==void 0?I:null,noFlagWin:r!==void 0?r:null,timePlayed:y!==void 0?y:null};if(await p.send(new m.PutCommand({TableName:f,Item:x})),c==="success"&&E>0)try{let g="BEST",N=`BEST#${e}`,w=await p.send(new m.QueryCommand({TableName:f,KeyConditionExpression:"userId = :pk AND #ts = :sk",ExpressionAttributeValues:{":pk":g,":sk":N},ExpressionAttributeNames:{"#ts":"timestamp"}})),h=w.Items&&w.Items.length>0?w.Items[0]:null;if(!h||E<h.time){let n={userId:g,timestamp:N,rawUserId:e,time:E,date:b,ttl:Math.floor(Date.now()/1e3)+31536e3,userName:s||e,userImage:i||null,usedFlags:d!==void 0?d:null,noFlagWin:r!==void 0?r:null,timePlayed:y!==void 0?y:null};await p.send(new m.PutCommand({TableName:f,Item:n}))}}catch(g){console.error("Error checking/updating best time:",g)}return{statusCode:200,headers:u,body:JSON.stringify({message:"Game result stored successfully",item:x})}}async function K(t){let a=t.queryStringParameters?.userId,e=t.queryStringParameters?.status,c=t.queryStringParameters?.limit?parseInt(t.queryStringParameters.limit):100;try{if(a){let s=`USER#${a}`,i={TableName:f,KeyConditionExpression:"userId = :userId AND begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":userId":s,":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},ScanIndexForward:!1,Limit:c};e&&(i.FilterExpression="#st = :status",i.ExpressionAttributeValues[":status"]=e,i.ExpressionAttributeNames["#st"]="status");let I=((await p.send(new m.QueryCommand(i))).Items||[]).map(r=>({...r,userId:r.rawUserId||(r.userId.startsWith("USER#")?r.userId.substring(5):r.userId),displayTimestamp:r.timestamp.startsWith("DATE#")?r.timestamp.substring(5):r.timestamp}));return{statusCode:200,headers:u,body:JSON.stringify(I)}}let o={TableName:f,FilterExpression:"begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},Limit:c};e&&(o.FilterExpression+=" AND #st = :status",o.ExpressionAttributeValues[":status"]=e,o.ExpressionAttributeNames["#st"]="status");let l=((await p.send(new m.ScanCommand(o))).Items||[]).map(s=>({...s,userId:s.rawUserId||(s.userId.startsWith("USER#")?s.userId.substring(5):s.userId),displayTimestamp:s.timestamp.startsWith("DATE#")?s.timestamp.substring(5):s.timestamp}));return{statusCode:200,headers:u,body:JSON.stringify(l)}}catch(o){return console.error("Error fetching games:",o),{statusCode:500,headers:u,body:JSON.stringify({message:"Error fetching games",error:o instanceof Error?o.message:String(o)})}}}async function q(t){let a=t.queryStringParameters?.limit?parseInt(t.queryStringParameters.limit):10;try{let e={TableName:f,KeyConditionExpression:"userId = :best",ExpressionAttributeValues:{":best":"BEST"}},l=((await p.send(new m.QueryCommand(e))).Items||[]).sort((s,i)=>s.time-i.time).slice(0,a).map((s,i)=>{let d=s.rawUserId||(s.timestamp.startsWith("BEST#")?s.timestamp.substring(5):"");return{rank:i+1,userId:d,userName:s.userName||d,userImage:s.userImage||null,time:s.time,date:s.date}});return{statusCode:200,headers:u,body:JSON.stringify(l)}}catch(e){return console.error("Error fetching leaderboard:",e),{statusCode:500,headers:u,body:JSON.stringify({message:"Error fetching leaderboard",error:e instanceof Error?e.message:String(e)})}}}async function k(t){try{let e={TableName:f,KeyConditionExpression:"userId = :best",ExpressionAttributeValues:{":best":"BEST"}},l=((await p.send(new m.QueryCommand(e))).Items||[]).sort((r,y)=>r.time-y.time).map((r,y)=>{let b=r.rawUserId||(r.timestamp.startsWith("BEST#")?r.timestamp.substring(5):"");return{rank:y+1,userId:b,userName:r.userName||b,userImage:r.userImage||null,time:r.time,date:r.date}}),s=l.findIndex(r=>r.userId===t);if(s===-1)return{statusCode:200,headers:u,body:JSON.stringify([])};let i=Math.max(0,s-2),d=Math.min(l.length-1,s+2),I=l.slice(i,d+1);return{statusCode:200,headers:u,body:JSON.stringify(I)}}catch(e){return console.error("Error fetching user leaderboard context:",e),{statusCode:500,headers:u,body:JSON.stringify({message:"Error fetching user leaderboard context",error:e instanceof Error?e.message:String(e)})}}}async function V(t){let a=`USER#${t}`,e={TableName:f,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":a}},o=(await p.send(new m.QueryCommand(e))).Items||[],S={TableName:f,KeyConditionExpression:"userId = :best AND #ts = :sk",ExpressionAttributeValues:{":best":"BEST",":sk":`BEST#${t}`},ExpressionAttributeNames:{"#ts":"timestamp"}},l=await p.send(new m.QueryCommand(S)),s=l.Items&&l.Items.length>0?l.Items[0]:null,i=0,d=0,I=0,r=s?s.time:Number.MAX_SAFE_INTEGER,y=0,b=0,E=s?.userName||t,P=s?.userImage||null,T=0,A=0,x=0,g=0,N=o.filter(n=>n.timestamp.startsWith("DATE#"));i=N.length,N.forEach(n=>{n.userName&&!E&&(E=n.userName),n.userImage&&!P&&(P=n.userImage),n.bombsExploded&&(T+=n.bombsExploded),n.status==="success"&&n.noFlagWin===!0&&A++,n.timePlayed&&typeof n.timePlayed=="number"&&(x+=n.timePlayed,g++),n.status==="success"?(d++,b+=n.time||0,s||(r=Math.min(r,n.time||Number.MAX_SAFE_INTEGER))):n.status==="defeat"&&I++}),y=d>0?Math.round(b/d):0;let w=g>0?Math.round(x/g):0;r===Number.MAX_SAFE_INTEGER&&(r=0);let h={userId:t,userName:E,userImage:P,totalGames:i,wins:d,losses:I,winRate:i>0?Math.round(d/i*100):0,fastestWin:r,averageWinTime:y,bombsExploded:T,noFlagWins:A,timePlayed:x,averageGameTime:w,recentGames:N.sort((n,R)=>R.timestamp.localeCompare(n.timestamp)).slice(0,5).map(n=>({...n,userId:n.rawUserId||t}))};return{statusCode:200,headers:u,body:JSON.stringify(h)}}0&&(module.exports={handler});
