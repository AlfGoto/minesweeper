"use strict";var D=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var W=Object.prototype.hasOwnProperty;var q=(s,i)=>{for(var e in i)D(s,e,{get:i[e],enumerable:!0})},K=(s,i,e,l)=>{if(i&&typeof i=="object"||typeof i=="function")for(let o of M(i))!W.call(s,o)&&o!==e&&D(s,o,{get:()=>i[o],enumerable:!(l=F(i,o))||l.enumerable});return s};var _=s=>K(D({},"__esModule",{value:!0}),s);var H={};q(H,{handler:()=>k});module.exports=_(H);var O=require("@aws-sdk/client-dynamodb"),y=require("@aws-sdk/lib-dynamodb"),$=new O.DynamoDBClient({}),S=y.DynamoDBDocumentClient.from($),T=process.env.TABLE_NAME,Z=process.env.STATUS_TIME_INDEX,u={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type,Authorization"},k=async s=>{if(s.httpMethod==="OPTIONS")return{statusCode:200,headers:u,body:JSON.stringify({message:"CORS enabled"})};try{let i=s.path.toLowerCase();if(i.includes("/leaderboard")){if(i.includes("/context/")){let e=s.pathParameters?.userId;return e?await X(e):{statusCode:400,headers:u,body:JSON.stringify({message:"User ID is required"})}}return await z(s)}if(i.includes("/stats/")){let e=s.pathParameters?.userId;return e?await v(e):{statusCode:400,headers:u,body:JSON.stringify({message:"User ID is required"})}}if(i.includes("/bestgames/")){let e=s.pathParameters?.userId;if(!e)return{statusCode:400,headers:u,body:JSON.stringify({message:"User ID is required"})};let l=s.queryStringParameters?.limit?parseInt(s.queryStringParameters.limit):5;return await j(e,l)}if(i.includes("/games")){if(s.httpMethod==="GET")return await L(s);if(s.httpMethod==="POST")return await V(s)}return{statusCode:404,headers:u,body:JSON.stringify({message:"Endpoint not found"})}}catch(i){return console.error("Error:",i),{statusCode:500,headers:u,body:JSON.stringify({message:"Internal server error",error:i instanceof Error?i.message:String(i)})}}};async function V(s){if(!s.body)return{statusCode:400,headers:u,body:JSON.stringify({message:"Request body is required"})};let i=JSON.parse(s.body),{userId:e,status:l,time:o,successTime:I,winTime:b,userName:r,userImage:d,usedFlags:m,bombsExploded:E,noFlagWin:a,timePlayed:c,cellsRevealed:f,gameRestarts:g}=i;if(!e||!l)return{statusCode:400,headers:u,body:JSON.stringify({message:"userId and status are required"})};let t=new Date().toISOString(),p=Number(o||I||b||0),G=Math.floor(Date.now()/1e3)+90*24*60*60,x=`USER#${e}`,N=`DATE#${t}`,A={userId:x,timestamp:N,rawUserId:e,status:l,time:p,date:t,ttl:G,userName:r||e,userImage:d||null,usedFlags:m!==void 0?m:null,bombsExploded:E!==void 0?E:null,noFlagWin:a!==void 0?a:null,timePlayed:c!==void 0?c:null,cellsRevealed:f!==void 0?f:null,gameRestarts:g!==void 0?g:null};if(await S.send(new y.PutCommand({TableName:T,Item:A})),l==="success"&&p>0)try{let w="BEST",h=`BEST#${e}`,P=await S.send(new y.QueryCommand({TableName:T,KeyConditionExpression:"userId = :pk AND #ts = :sk",ExpressionAttributeValues:{":pk":w,":sk":h},ExpressionAttributeNames:{"#ts":"timestamp"}})),R=P.Items&&P.Items.length>0?P.Items[0]:null;if(!R||p<R.time){let C={userId:w,timestamp:h,rawUserId:e,time:p,date:t,ttl:Math.floor(Date.now()/1e3)+31536e3,userName:r||e,userImage:d||null,usedFlags:m!==void 0?m:null,noFlagWin:a!==void 0?a:null,timePlayed:c!==void 0?c:null,cellsRevealed:f!==void 0?f:null,gameRestarts:g!==void 0?g:null};await S.send(new y.PutCommand({TableName:T,Item:C}))}}catch(w){console.error("Error checking/updating best time:",w)}return{statusCode:200,headers:u,body:JSON.stringify({message:"Game result stored successfully",item:A})}}async function L(s){let i=s.queryStringParameters?.userId,e=s.queryStringParameters?.status,l=s.queryStringParameters?.limit?parseInt(s.queryStringParameters.limit):100;try{if(i){let r=`USER#${i}`,d={TableName:T,KeyConditionExpression:"userId = :userId AND begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":userId":r,":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},ScanIndexForward:!1,Limit:e==="success"?void 0:l};e&&(d.FilterExpression="#st = :status",d.ExpressionAttributeValues[":status"]=e,d.ExpressionAttributeNames["#st"]="status");let E=((await S.send(new y.QueryCommand(d))).Items||[]).map(a=>({...a,userId:a.rawUserId||(a.userId.startsWith("USER#")?a.userId.substring(5):a.userId),displayTimestamp:a.timestamp.startsWith("DATE#")?a.timestamp.substring(5):a.timestamp}));return e==="success"&&(E=E.sort((a,c)=>a.time-c.time).slice(0,l)),{statusCode:200,headers:u,body:JSON.stringify(E)}}let o={TableName:T,FilterExpression:"begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},Limit:l};e&&(o.FilterExpression+=" AND #st = :status",o.ExpressionAttributeValues[":status"]=e,o.ExpressionAttributeNames["#st"]="status");let b=((await S.send(new y.ScanCommand(o))).Items||[]).map(r=>({...r,userId:r.rawUserId||(r.userId.startsWith("USER#")?r.userId.substring(5):r.userId),displayTimestamp:r.timestamp.startsWith("DATE#")?r.timestamp.substring(5):r.timestamp}));return{statusCode:200,headers:u,body:JSON.stringify(b)}}catch(o){return console.error("Error fetching games:",o),{statusCode:500,headers:u,body:JSON.stringify({message:"Error fetching games",error:o instanceof Error?o.message:String(o)})}}}async function z(s){let i=s.queryStringParameters?.limit?parseInt(s.queryStringParameters.limit):10;try{let e={TableName:T,KeyConditionExpression:"userId = :best",ExpressionAttributeValues:{":best":"BEST"}},b=((await S.send(new y.QueryCommand(e))).Items||[]).sort((r,d)=>r.time-d.time).slice(0,i).map((r,d)=>{let m=r.rawUserId||(r.timestamp.startsWith("BEST#")?r.timestamp.substring(5):"");return{rank:d+1,userId:m,userName:r.userName||m,userImage:r.userImage||null,time:r.time,date:r.date}});return{statusCode:200,headers:u,body:JSON.stringify(b)}}catch(e){return console.error("Error fetching leaderboard:",e),{statusCode:500,headers:u,body:JSON.stringify({message:"Error fetching leaderboard",error:e instanceof Error?e.message:String(e)})}}}async function X(s){try{let e={TableName:T,KeyConditionExpression:"userId = :best",ExpressionAttributeValues:{":best":"BEST"}},b=((await S.send(new y.QueryCommand(e))).Items||[]).sort((a,c)=>a.time-c.time).map((a,c)=>{let f=a.rawUserId||(a.timestamp.startsWith("BEST#")?a.timestamp.substring(5):"");return{rank:c+1,userId:f,userName:a.userName||f,userImage:a.userImage||null,time:a.time,date:a.date}}),r=b.findIndex(a=>a.userId===s);if(r===-1)return{statusCode:200,headers:u,body:JSON.stringify([])};let d=Math.max(0,r-2),m=Math.min(b.length-1,r+2),E=b.slice(d,m+1);return{statusCode:200,headers:u,body:JSON.stringify(E)}}catch(e){return console.error("Error fetching user leaderboard context:",e),{statusCode:500,headers:u,body:JSON.stringify({message:"Error fetching user leaderboard context",error:e instanceof Error?e.message:String(e)})}}}async function v(s){let i=`USER#${s}`,e={TableName:T,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":i}},o=(await S.send(new y.QueryCommand(e))).Items||[],I={TableName:T,KeyConditionExpression:"userId = :best AND #ts = :sk",ExpressionAttributeValues:{":best":"BEST",":sk":`BEST#${s}`},ExpressionAttributeNames:{"#ts":"timestamp"}},b=await S.send(new y.QueryCommand(I)),r=b.Items&&b.Items.length>0?b.Items[0]:null,d=0,m=0,E=0,a=r?r.time:Number.MAX_SAFE_INTEGER,c=0,f=0,g=r?.userName||s,t=r?.userImage||null,p=0,G=0,x=0,N=0,A=0,w=0,h=0,P=0,R=0,C=o.filter(n=>n.timestamp.startsWith("DATE#"));d=C.length,C.forEach(n=>{n.userName&&!g&&(g=n.userName),n.userImage&&!t&&(t=n.userImage),n.bombsExploded&&(p+=n.bombsExploded),n.status==="success"&&n.noFlagWin===!0&&G++,n.timePlayed&&typeof n.timePlayed=="number"&&(x+=n.timePlayed,N++),n.cellsRevealed&&typeof n.cellsRevealed=="number"&&(A+=n.cellsRevealed),n.gameRestarts&&typeof n.gameRestarts=="number"&&(w+=n.gameRestarts),n.usedFlags&&typeof n.usedFlags=="number"&&(R+=n.usedFlags),n.status==="success"?(m++,f+=n.time||0,r||(a=Math.min(a,n.time||Number.MAX_SAFE_INTEGER))):n.status==="defeat"?E++:n.status==="abandoned"?h++:n.status==="restarted"&&P++}),c=m>0?Math.round(f/m):0;let U=N>0?Math.round(x/N):0;a===Number.MAX_SAFE_INTEGER&&(a=0);let J={userId:s,userName:g,userImage:t,totalGames:d,wins:m,losses:E,winRate:d>0?Math.round(m/d*100):0,fastestWin:a,averageWinTime:c,bombsExploded:p,noFlagWins:G,timePlayed:x,averageGameTime:U,totalCellsRevealed:A,gameRestarts:w,abandonedGames:h,restartedGames:P,recentGames:C.sort((n,B)=>B.timestamp.localeCompare(n.timestamp)).slice(0,5).map(n=>({...n,userId:n.rawUserId||s})),totalFlagsUsed:R};return{statusCode:200,headers:u,body:JSON.stringify(J)}}async function j(s,i=5){try{let e=[],l={TableName:T,KeyConditionExpression:"userId = :best AND #ts = :sk",ExpressionAttributeValues:{":best":"BEST",":sk":`BEST#${s}`},ExpressionAttributeNames:{"#ts":"timestamp"}},o=await S.send(new y.QueryCommand(l)),I=o.Items&&o.Items.length>0?o.Items[0]:null;I&&I.time>0&&e.push({...I,userId:I.rawUserId||s,status:"success",date:I.date||new Date().toISOString()});let b=`USER#${s}`,r={TableName:T,KeyConditionExpression:"userId = :userId AND begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":userId":b,":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"}},a=((await S.send(new y.QueryCommand(r))).Items||[]).map(t=>({...t,userId:t.rawUserId||(t.userId.startsWith("USER#")?t.userId.substring(5):t.userId),date:t.date||(t.timestamp.startsWith("DATE#")?t.timestamp.substring(5):t.timestamp),displayTimestamp:t.timestamp.startsWith("DATE#")?t.timestamp.substring(5):t.timestamp})).filter(t=>{let p=t.time&&t.time>0||t.successTime&&t.successTime>0||t.winTime&&t.winTime>0;return t.status==="success"&&p}).map(t=>({...t,time:t.time||t.successTime||t.winTime||0,date:t.date||new Date(t.displayTimestamp).toISOString()}));e.push(...a);let c=[],f=new Set;for(let t of e){let p=`${t.time}-${t.date}`;f.has(p)||(f.add(p),c.push(t))}let g=c.sort((t,p)=>t.time-p.time).slice(0,i);return console.log(`Found ${g.length} best games for user ${s}`),{statusCode:200,headers:u,body:JSON.stringify(g)}}catch(e){return console.error(`Error fetching best games for user ${s}:`,e),{statusCode:500,headers:u,body:JSON.stringify({message:"Error fetching best games",error:e instanceof Error?e.message:String(e)})}}}0&&(module.exports={handler});
