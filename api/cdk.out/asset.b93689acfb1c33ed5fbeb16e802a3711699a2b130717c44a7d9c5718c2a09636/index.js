"use strict";var R=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var _=(e,s)=>{for(var r in s)R(e,r,{get:s[r],enumerable:!0})},F=(e,s,r,m)=>{if(s&&typeof s=="object"||typeof s=="function")for(let i of U(s))!M.call(e,i)&&i!==r&&R(e,i,{get:()=>s[i],enumerable:!(m=O(s,i))||m.enumerable});return e};var W=e=>F(R({},"__esModule",{value:!0}),e);var L={};_(L,{handler:()=>q});module.exports=W(L);var C=require("@aws-sdk/client-dynamodb"),u=require("@aws-sdk/lib-dynamodb"),J=new C.DynamoDBClient({}),b=u.DynamoDBDocumentClient.from(J),f=process.env.TABLE_NAME,k=process.env.STATUS_TIME_INDEX,d={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type,Authorization"},q=async e=>{if(console.log("Event received:",JSON.stringify(e,null,2)),e.httpMethod==="OPTIONS")return{statusCode:200,headers:d,body:JSON.stringify({message:"CORS enabled"})};try{let s=e.path.toLowerCase();if(s.includes("/leaderboard"))return await B(e);if(s.includes("/stats/")){let r=e.pathParameters?.userId;return r?await $(r):{statusCode:400,headers:d,body:JSON.stringify({message:"User ID is required"})}}if(s.includes("/games")){if(e.httpMethod==="GET")return await V(e);if(e.httpMethod==="POST")return await K(e)}return{statusCode:404,headers:d,body:JSON.stringify({message:"Endpoint not found"})}}catch(s){return console.error("Error:",s),{statusCode:500,headers:d,body:JSON.stringify({message:"Internal server error",error:s instanceof Error?s.message:String(s)})}}};async function K(e){if(!e.body)return{statusCode:400,headers:d,body:JSON.stringify({message:"Request body is required"})};let s=JSON.parse(e.body);console.log("Request body:",s);let{userId:r,status:m,time:i,successTime:N,winTime:E,userName:t,userImage:n,usedFlags:l,bombsExploded:c,noFlagWin:o,timePlayed:I}=s;if(!r||!m)return{statusCode:400,headers:d,body:JSON.stringify({message:"userId and status are required"})};let P=new Date().toISOString(),p=Number(i||N||E||0),T=Math.floor(Date.now()/1e3)+90*24*60*60,g=`USER#${r}`,x=`DATE#${P}`,w={userId:g,timestamp:x,rawUserId:r,status:m,time:p,date:P,ttl:T,userName:t||r,userImage:n||null,usedFlags:l!==void 0?l:null,bombsExploded:c!==void 0?c:null,noFlagWin:o!==void 0?o:null,timePlayed:I!==void 0?I:null};if(console.log("Storing game item:",w),await b.send(new u.PutCommand({TableName:f,Item:w})),m==="success"&&p>0){let A=`USER#${r}`;try{let y=await b.send(new u.QueryCommand({TableName:f,KeyConditionExpression:"userId = :userId AND timestamp = :timestamp",ExpressionAttributeValues:{":userId":g,":timestamp":A}})),S=y.Items&&y.Items.length>0?y.Items[0]:null;if(!S||p<S.time){console.log(`Updating best time for ${r}: ${p} seconds`);let h={userId:g,timestamp:A,rawUserId:r,status:"best",time:p,date:P,ttl:Math.floor(Date.now()/1e3)+365*24*60*60,userName:t||r,userImage:n||null};await b.send(new u.PutCommand({TableName:f,Item:h})),console.log("Best time updated successfully")}}catch(y){console.error("Error checking/updating best time:",y)}}return console.log("Game result stored successfully"),{statusCode:200,headers:d,body:JSON.stringify({message:"Game result stored successfully",item:w})}}async function V(e){let s=e.queryStringParameters?.userId,r=e.queryStringParameters?.status,m=e.queryStringParameters?.limit?parseInt(e.queryStringParameters.limit):100;if(s){let t=`USER#${s}`,n={TableName:f,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":t},ScanIndexForward:!1,Limit:m};r?(n.FilterExpression="status = :status AND begins_with(timestamp, :datePrefix)",n.ExpressionAttributeValues[":status"]=r,n.ExpressionAttributeValues[":datePrefix"]="DATE#"):(n.FilterExpression="begins_with(timestamp, :datePrefix)",n.ExpressionAttributeValues[":datePrefix"]="DATE#");let c=((await b.send(new u.QueryCommand(n))).Items||[]).map(o=>({...o,userId:o.rawUserId||(o.userId.startsWith("USER#")?o.userId.substring(5):o.userId),displayTimestamp:o.timestamp.startsWith("DATE#")?o.timestamp.substring(5):o.timestamp}));return{statusCode:200,headers:d,body:JSON.stringify(c)}}let i={TableName:f,FilterExpression:"begins_with(timestamp, :datePrefix)",ExpressionAttributeValues:{":datePrefix":"DATE#"},Limit:m};r&&(i.FilterExpression+=" AND status = :status",i.ExpressionAttributeValues[":status"]=r);let E=((await b.send(new u.ScanCommand(i))).Items||[]).map(t=>({...t,userId:t.rawUserId||(t.userId.startsWith("USER#")?t.userId.substring(5):t.userId),displayTimestamp:t.timestamp.startsWith("DATE#")?t.timestamp.substring(5):t.timestamp}));return{statusCode:200,headers:d,body:JSON.stringify(E)}}async function B(e){let s=e.queryStringParameters?.limit?parseInt(e.queryStringParameters.limit):10,r={TableName:f,FilterExpression:"begins_with(timestamp, :userPrefix) AND status = :status",ExpressionAttributeValues:{":userPrefix":"USER#",":status":"best"}},E=((await b.send(new u.ScanCommand(r))).Items||[]).sort((t,n)=>t.time-n.time).slice(0,s).map((t,n)=>{let l=t.rawUserId||(t.userId.startsWith("USER#")?t.userId.substring(5):t.userId);return{rank:n+1,userId:l,userName:t.userName||l,userImage:t.userImage||null,time:t.time,date:t.date}});return{statusCode:200,headers:d,body:JSON.stringify(E)}}async function $(e){let s=`USER#${e}`,r={TableName:f,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":s}},i=(await b.send(new u.QueryCommand(r))).Items||[],N=`USER#${e}`,E={TableName:f,KeyConditionExpression:"userId = :userId AND timestamp = :timestamp",ExpressionAttributeValues:{":userId":s,":timestamp":N}},t=await b.send(new u.QueryCommand(E)),n=t.Items&&t.Items.length>0?t.Items[0]:null,l=0,c=0,o=0,I=n?n.time:Number.MAX_SAFE_INTEGER,P=0,p=0,T=n?.userName||e,g=n?.userImage||null,x=0,w=0,A=0,y=0,S=i.filter(a=>!a.timestamp.startsWith("USER#"));l=S.length,S.forEach(a=>{a.userName&&!T&&(T=a.userName),a.userImage&&!g&&(g=a.userImage),a.bombsExploded&&(x+=a.bombsExploded),a.status==="success"&&a.noFlagWin===!0&&w++,a.timePlayed&&typeof a.timePlayed=="number"&&(A+=a.timePlayed,y++),a.status==="success"?(c++,p+=a.time||0,n||(I=Math.min(I,a.time||Number.MAX_SAFE_INTEGER))):a.status==="defeat"&&o++}),P=c>0?Math.round(p/c):0;let h=y>0?Math.round(A/y):0;I===Number.MAX_SAFE_INTEGER&&(I=0);let G={userId:e,userName:T,userImage:g,totalGames:l,wins:c,losses:o,winRate:l>0?Math.round(c/l*100):0,fastestWin:I,averageWinTime:P,bombsExploded:x,noFlagWins:w,timePlayed:A,averageGameTime:h,recentGames:S.sort((a,D)=>D.timestamp.localeCompare(a.timestamp)).slice(0,5).map(a=>({...a,userId:a.rawUserId||e}))};return{statusCode:200,headers:d,body:JSON.stringify(G)}}0&&(module.exports={handler});
