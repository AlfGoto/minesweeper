"use strict";var C=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var F=(s,t)=>{for(var e in t)C(s,e,{get:t[e],enumerable:!0})},J=(s,t,e,m)=>{if(t&&typeof t=="object"||typeof t=="function")for(let c of G(t))!M.call(s,c)&&c!==e&&C(s,c,{get:()=>t[c],enumerable:!(m=D(t,c))||m.enumerable});return s};var _=s=>J(C({},"__esModule",{value:!0}),s);var $={};F($,{handler:()=>K});module.exports=_($);var O=require("@aws-sdk/client-dynamodb"),I=require("@aws-sdk/lib-dynamodb"),W=new O.DynamoDBClient({}),f=I.DynamoDBDocumentClient.from(W),p=process.env.TABLE_NAME,X=process.env.STATUS_TIME_INDEX,l={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type,Authorization"},K=async s=>{if(console.log("Event received:",JSON.stringify(s,null,2)),s.httpMethod==="OPTIONS")return{statusCode:200,headers:l,body:JSON.stringify({message:"CORS enabled"})};try{let t=s.path.toLowerCase();if(t.includes("/leaderboard")){if(t.includes("/context/")){let e=s.pathParameters?.userId;return e?await L(e):{statusCode:400,headers:l,body:JSON.stringify({message:"User ID is required"})}}return await q(s)}if(t.includes("/stats/")){let e=s.pathParameters?.userId;return e?await B(e):{statusCode:400,headers:l,body:JSON.stringify({message:"User ID is required"})}}if(t.includes("/games")){if(s.httpMethod==="GET")return await V(s);if(s.httpMethod==="POST")return await k(s)}return{statusCode:404,headers:l,body:JSON.stringify({message:"Endpoint not found"})}}catch(t){return console.error("Error:",t),{statusCode:500,headers:l,body:JSON.stringify({message:"Internal server error",error:t instanceof Error?t.message:String(t)})}}};async function k(s){if(!s.body)return{statusCode:400,headers:l,body:JSON.stringify({message:"Request body is required"})};let t=JSON.parse(s.body);console.log("Request body:",t);let{userId:e,status:m,time:c,successTime:P,winTime:N,userName:o,userImage:n,usedFlags:a,bombsExploded:d,noFlagWin:i,timePlayed:r}=t;if(!e||!m)return{statusCode:400,headers:l,body:JSON.stringify({message:"userId and status are required"})};let b=new Date().toISOString(),y=Number(c||P||N||0),S=Math.floor(Date.now()/1e3)+90*24*60*60,E=`USER#${e}`,g=`DATE#${b}`,w={userId:E,timestamp:g,rawUserId:e,status:m,time:y,date:b,ttl:S,userName:o||e,userImage:n||null,usedFlags:a!==void 0?a:null,bombsExploded:d!==void 0?d:null,noFlagWin:i!==void 0?i:null,timePlayed:r!==void 0?r:null};if(console.log("Storing game item:",w),await f.send(new I.PutCommand({TableName:p,Item:w})),m==="success"&&y>0){let A=`USER#${e}`;try{let x=await f.send(new I.QueryCommand({TableName:p,KeyConditionExpression:"userId = :userId AND timestamp = :timestamp",ExpressionAttributeValues:{":userId":E,":timestamp":A}})),h=x.Items&&x.Items.length>0?x.Items[0]:null;if(!h||y<h.time){console.log(`Updating best time for ${e}: ${y} seconds`);let T={userId:E,timestamp:A,rawUserId:e,status:"best",time:y,date:b,ttl:Math.floor(Date.now()/1e3)+365*24*60*60,userName:o||e,userImage:n||null,usedFlags:a!==void 0?a:null,noFlagWin:i!==void 0?i:null,timePlayed:r!==void 0?r:null};await f.send(new I.PutCommand({TableName:p,Item:T}));let R={userId:"LEADERBOARD",timestamp:`TIME#${y.toString().padStart(12,"0")}#USER#${e}`,rawUserId:e,status:"leaderboard",time:y,date:b,ttl:Math.floor(Date.now()/1e3)+365*24*60*60,userName:o||e,userImage:n||null};await f.send(new I.PutCommand({TableName:p,Item:R})),console.log("Best time and leaderboard entry updated successfully")}}catch(x){console.error("Error checking/updating best time:",x)}}return console.log("Game result stored successfully"),{statusCode:200,headers:l,body:JSON.stringify({message:"Game result stored successfully",item:w})}}async function V(s){let t=s.queryStringParameters?.userId,e=s.queryStringParameters?.status,m=s.queryStringParameters?.limit?parseInt(s.queryStringParameters.limit):100;if(t){let o=`USER#${t}`,n={TableName:p,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":o},ScanIndexForward:!1,Limit:m};e?(n.FilterExpression="#st = :status AND begins_with(#ts, :datePrefix)",n.ExpressionAttributeValues[":status"]=e,n.ExpressionAttributeValues[":datePrefix"]="DATE#",n.ExpressionAttributeNames={"#ts":"timestamp","#st":"status"}):(n.FilterExpression="begins_with(#ts, :datePrefix)",n.ExpressionAttributeValues[":datePrefix"]="DATE#",n.ExpressionAttributeNames={"#ts":"timestamp"});let d=((await f.send(new I.QueryCommand(n))).Items||[]).map(i=>({...i,userId:i.rawUserId||(i.userId.startsWith("USER#")?i.userId.substring(5):i.userId),displayTimestamp:i.timestamp.startsWith("DATE#")?i.timestamp.substring(5):i.timestamp}));return{statusCode:200,headers:l,body:JSON.stringify(d)}}let c={TableName:p,FilterExpression:"begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},Limit:m};e&&(c.FilterExpression+=" AND #st = :status",c.ExpressionAttributeValues[":status"]=e,c.ExpressionAttributeNames["#st"]="status");let N=((await f.send(new I.ScanCommand(c))).Items||[]).map(o=>({...o,userId:o.rawUserId||(o.userId.startsWith("USER#")?o.userId.substring(5):o.userId),displayTimestamp:o.timestamp.startsWith("DATE#")?o.timestamp.substring(5):o.timestamp}));return{statusCode:200,headers:l,body:JSON.stringify(N)}}async function q(s){let t=s.queryStringParameters?.limit?parseInt(s.queryStringParameters.limit):10;try{let e={TableName:p,KeyConditionExpression:"userId = :leaderboard",ExpressionAttributeValues:{":leaderboard":"LEADERBOARD"},Limit:t,ScanIndexForward:!0},m=await f.send(new I.QueryCommand(e));if(m.Items&&m.Items.length>0){console.log("Using optimized leaderboard entries");let a=m.Items.map((d,i)=>{let r=d.rawUserId||"";return{rank:i+1,userId:r,userName:d.userName||r,userImage:d.userImage||null,time:d.time,date:d.date}});return{statusCode:200,headers:l,body:JSON.stringify(a)}}console.log("Falling back to scanning user best time records");let c={TableName:p,FilterExpression:"begins_with(#ts, :userPrefix) AND #st = :status",ExpressionAttributeValues:{":userPrefix":"USER#",":status":"best"},ExpressionAttributeNames:{"#ts":"timestamp","#st":"status"}},n=((await f.send(new I.ScanCommand(c))).Items||[]).sort((a,d)=>a.time-d.time).slice(0,t).map((a,d)=>{let i=a.rawUserId||(a.userId.startsWith("USER#")?a.userId.substring(5):a.userId);return{rank:d+1,userId:i,userName:a.userName||i,userImage:a.userImage||null,time:a.time,date:a.date}});return{statusCode:200,headers:l,body:JSON.stringify(n)}}catch(e){return console.error("Error fetching leaderboard:",e),{statusCode:500,headers:l,body:JSON.stringify({message:"Error fetching leaderboard",error:e instanceof Error?e.message:String(e)})}}}async function L(s){try{let e={TableName:p,KeyConditionExpression:"userId = :leaderboard",ExpressionAttributeValues:{":leaderboard":"LEADERBOARD"},ScanIndexForward:!0},m=await f.send(new I.QueryCommand(e));if(m.Items&&m.Items.length>0){console.log("Using optimized leaderboard entries for context");let r=m.Items.map((g,w)=>({rank:w+1,userId:g.rawUserId||"",userName:g.userName||g.rawUserId||"",userImage:g.userImage||null,time:g.time,date:g.date})),b=r.findIndex(g=>g.userId===s);if(b===-1)return{statusCode:200,headers:l,body:JSON.stringify([])};let y=Math.max(0,b-2),S=Math.min(r.length-1,b+2),E=r.slice(y,S+1);return{statusCode:200,headers:l,body:JSON.stringify(E)}}console.log("Falling back to scanning user best time records for context");let c={TableName:p,FilterExpression:"begins_with(#ts, :userPrefix) AND #st = :status",ExpressionAttributeValues:{":userPrefix":"USER#",":status":"best"},ExpressionAttributeNames:{"#ts":"timestamp","#st":"status"}},o=((await f.send(new I.ScanCommand(c))).Items||[]).sort((r,b)=>r.time-b.time).map((r,b)=>{let y=r.rawUserId||(r.userId.startsWith("USER#")?r.userId.substring(5):r.userId);return{rank:b+1,userId:y,userName:r.userName||y,userImage:r.userImage||null,time:r.time,date:r.date}}),n=o.findIndex(r=>r.userId===s);if(n===-1)return{statusCode:200,headers:l,body:JSON.stringify([])};let a=Math.max(0,n-2),d=Math.min(o.length-1,n+2),i=o.slice(a,d+1);return{statusCode:200,headers:l,body:JSON.stringify(i)}}catch(e){return console.error("Error fetching user leaderboard context:",e),{statusCode:500,headers:l,body:JSON.stringify({message:"Error fetching user leaderboard context",error:e instanceof Error?e.message:String(e)})}}}async function B(s){let t=`USER#${s}`,e={TableName:p,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":t}},c=(await f.send(new I.QueryCommand(e))).Items||[],P=`USER#${s}`,N={TableName:p,KeyConditionExpression:"userId = :userId AND #ts = :timestamp",ExpressionAttributeValues:{":userId":t,":timestamp":P},ExpressionAttributeNames:{"#ts":"timestamp"}},o=await f.send(new I.QueryCommand(N)),n=o.Items&&o.Items.length>0?o.Items[0]:null,a=0,d=0,i=0,r=n?n.time:Number.MAX_SAFE_INTEGER,b=0,y=0,S=n?.userName||s,E=n?.userImage||null,g=0,w=0,A=0,x=0,h=c.filter(u=>!u.timestamp.startsWith("USER#"));a=h.length,h.forEach(u=>{u.userName&&!S&&(S=u.userName),u.userImage&&!E&&(E=u.userImage),u.bombsExploded&&(g+=u.bombsExploded),u.status==="success"&&u.noFlagWin===!0&&w++,u.timePlayed&&typeof u.timePlayed=="number"&&(A+=u.timePlayed,x++),u.status==="success"?(d++,y+=u.time||0,n||(r=Math.min(r,u.time||Number.MAX_SAFE_INTEGER))):u.status==="defeat"&&i++}),b=d>0?Math.round(y/d):0;let T=x>0?Math.round(A/x):0;r===Number.MAX_SAFE_INTEGER&&(r=0);let U={userId:s,userName:S,userImage:E,totalGames:a,wins:d,losses:i,winRate:a>0?Math.round(d/a*100):0,fastestWin:r,averageWinTime:b,bombsExploded:g,noFlagWins:w,timePlayed:A,averageGameTime:T,recentGames:h.sort((u,R)=>R.timestamp.localeCompare(u.timestamp)).slice(0,5).map(u=>({...u,userId:u.rawUserId||s}))};return{statusCode:200,headers:l,body:JSON.stringify(U)}}0&&(module.exports={handler});
