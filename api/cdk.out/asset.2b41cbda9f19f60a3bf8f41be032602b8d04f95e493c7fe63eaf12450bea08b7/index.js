"use strict";var S=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var h=(e,t)=>{for(var s in t)S(e,s,{get:t[s],enumerable:!0})},O=(e,t,s,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of x(t))!C.call(e,r)&&r!==s&&S(e,r,{get:()=>t[r],enumerable:!(i=T(t,r))||i.enumerable});return e};var G=e=>O(S({},"__esModule",{value:!0}),e);var F={};h(F,{handler:()=>R});module.exports=G(F);var P=require("@aws-sdk/client-dynamodb"),o=require("@aws-sdk/lib-dynamodb"),D=new P.DynamoDBClient({}),g=o.DynamoDBDocumentClient.from(D),y=process.env.TABLE_NAME,M=process.env.STATUS_TIME_INDEX,l={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type,Authorization"},R=async e=>{if(console.log("Event received:",JSON.stringify(e,null,2)),e.httpMethod==="OPTIONS")return{statusCode:200,headers:l,body:JSON.stringify({message:"CORS enabled"})};try{let t=e.path.toLowerCase();if(t.includes("/leaderboard"))return await q(e);if(t.includes("/stats/")){let s=e.pathParameters?.userId;return s?await B(s):{statusCode:400,headers:l,body:JSON.stringify({message:"User ID is required"})}}if(t.includes("/games")){if(e.httpMethod==="GET")return await _(e);if(e.httpMethod==="POST")return await J(e)}return{statusCode:404,headers:l,body:JSON.stringify({message:"Endpoint not found"})}}catch(t){return console.error("Error:",t),{statusCode:500,headers:l,body:JSON.stringify({message:"Internal server error",error:t instanceof Error?t.message:String(t)})}}};async function J(e){if(!e.body)return{statusCode:400,headers:l,body:JSON.stringify({message:"Request body is required"})};let t=JSON.parse(e.body);console.log("Request body:",t);let{userId:s,status:i,time:r,successTime:a,winTime:n,userName:d,userImage:I}=t;if(!s||!i)return{statusCode:400,headers:l,body:JSON.stringify({message:"userId and status are required"})};let b=new Date().toISOString(),m=Number(r||a||n||0),N=Math.floor(Date.now()/1e3)+90*24*60*60,p={userId:s,timestamp:b,status:i,time:m,date:new Date().toISOString(),ttl:N,userName:d||s,userImage:I||null};if(console.log("Storing game item:",p),await g.send(new o.PutCommand({TableName:y,Item:p})),i==="success"&&m>0){let w={TableName:y,Key:{userId:s,timestamp:s}};try{let c=await g.send(new o.QueryCommand({TableName:y,KeyConditionExpression:"userId = :userId AND timestamp = :timestamp",ExpressionAttributeValues:{":userId":s,":timestamp":s}})),f=c.Items&&c.Items.length>0?c.Items[0]:null;if(!f||m<f.time){console.log(`Updating best time for ${s}: ${m} seconds`);let E={userId:s,timestamp:s,status:"best",time:m,date:new Date().toISOString(),ttl:Math.floor(Date.now()/1e3)+365*24*60*60,userName:d||s,userImage:I||null};await g.send(new o.PutCommand({TableName:y,Item:E})),console.log("Best time updated successfully")}}catch(c){console.error("Error checking/updating best time:",c)}}return console.log("Game result stored successfully"),{statusCode:200,headers:l,body:JSON.stringify({message:"Game result stored successfully",item:p})}}async function _(e){let t=e.queryStringParameters?.userId,s=e.queryStringParameters?.status,i=e.queryStringParameters?.limit?parseInt(e.queryStringParameters.limit):100;if(t){let n={TableName:y,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":t},ScanIndexForward:!1,Limit:i};s&&(n.FilterExpression="status = :status",n.ExpressionAttributeValues[":status"]=s);let d=await g.send(new o.QueryCommand(n));return{statusCode:200,headers:l,body:JSON.stringify(d.Items||[])}}let r={TableName:y,Limit:i};s&&(r.FilterExpression="status = :status",r.ExpressionAttributeValues={":status":s});let a=await g.send(new o.ScanCommand(r));return{statusCode:200,headers:l,body:JSON.stringify(a.Items||[])}}async function q(e){let t=e.queryStringParameters?.limit?parseInt(e.queryStringParameters.limit):10,s={TableName:y,IndexName:M,KeyConditionExpression:"status = :status",ExpressionAttributeValues:{":status":"success"},ScanIndexForward:!0,Limit:t},r=((await g.send(new o.QueryCommand(s))).Items||[]).map((a,n)=>({rank:n+1,userId:a.userId,userName:a.userName||a.userId,userImage:a.userImage||null,time:a.time,date:a.date}));return{statusCode:200,headers:l,body:JSON.stringify(r)}}async function B(e){let t={TableName:y,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":e}},i=(await g.send(new o.QueryCommand(t))).Items||[],r={TableName:y,KeyConditionExpression:"userId = :userId AND timestamp = :timestamp",ExpressionAttributeValues:{":userId":e,":timestamp":e}},a=await g.send(new o.QueryCommand(r)),n=a.Items&&a.Items.length>0?a.Items[0]:null,d=0,I=0,b=0,m=n?n.time:Number.MAX_SAFE_INTEGER,N=0,p=0,w=n?.userName||e,c=n?.userImage||null,f=i.filter(u=>u.timestamp!==e);d=f.length,f.forEach(u=>{u.userName&&!w&&(w=u.userName),u.userImage&&!c&&(c=u.userImage),u.status==="success"?(I++,p+=u.time||0,n||(m=Math.min(m,u.time||Number.MAX_SAFE_INTEGER))):u.status==="defeat"&&b++}),N=I>0?Math.round(p/I):0,m===Number.MAX_SAFE_INTEGER&&(m=0);let E={userId:e,userName:w,userImage:c,totalGames:d,wins:I,losses:b,winRate:d>0?Math.round(I/d*100):0,fastestWin:m,averageWinTime:N,recentGames:f.sort((u,A)=>A.timestamp.localeCompare(u.timestamp)).slice(0,5)};return{statusCode:200,headers:l,body:JSON.stringify(E)}}0&&(module.exports={handler});
