"use strict";var W=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var J=(t,n)=>{for(var s in n)W(t,s,{get:n[s],enumerable:!0})},$=(t,n,s,d)=>{if(n&&typeof n=="object"||typeof n=="function")for(let e of K(n))!M.call(t,e)&&e!==s&&W(t,e,{get:()=>n[e],enumerable:!(d=B(n,e))||d.enumerable});return t};var v=t=>$(W({},"__esModule",{value:!0}),t);var Z={};J(Z,{handler:()=>L});module.exports=v(Z);var U=require("@aws-sdk/client-dynamodb"),g=require("@aws-sdk/lib-dynamodb"),q=new U.DynamoDBClient({}),T=g.DynamoDBDocumentClient.from(q),P=process.env.TABLE_NAME,te=process.env.STATUS_TIME_INDEX,f={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type,Authorization"},L=async t=>{if(t.httpMethod==="OPTIONS")return{statusCode:200,headers:f,body:JSON.stringify({message:"CORS enabled"})};try{let n=t.path.toLowerCase();if(n.includes("/leaderboard")){if(n.includes("/context/")){let s=t.pathParameters?.userId;return s?await X(s):{statusCode:400,headers:f,body:JSON.stringify({message:"User ID is required"})}}return await z(t)}if(n.includes("/stats/")){let s=t.pathParameters?.userId;return s?await j(s):{statusCode:400,headers:f,body:JSON.stringify({message:"User ID is required"})}}if(n.includes("/bestgames/")){let s=t.pathParameters?.userId;if(!s)return{statusCode:400,headers:f,body:JSON.stringify({message:"User ID is required"})};let d=t.queryStringParameters?.limit?parseInt(t.queryStringParameters.limit):5;return await Q(s,d)}if(n.includes("/games")){if(t.httpMethod==="GET")return await k(t);if(t.httpMethod==="POST")return await V(t)}return{statusCode:404,headers:f,body:JSON.stringify({message:"Endpoint not found"})}}catch(n){return console.error("Error:",n),{statusCode:500,headers:f,body:JSON.stringify({message:"Internal server error",error:n instanceof Error?n.message:String(n)})}}};async function V(t){if(!t.body)return{statusCode:400,headers:f,body:JSON.stringify({message:"Request body is required"})};let n=JSON.parse(t.body),{userId:s,status:d,time:e,successTime:m,winTime:c,userName:a,userImage:l,usedFlags:y,bombsExploded:u,noFlagWin:o,timePlayed:b,cellsRevealed:I,gameRestarts:E}=n;if(!s||!d)return{statusCode:400,headers:f,body:JSON.stringify({message:"userId and status are required"})};let r=new Date().toISOString(),p=Number(e||m||c||0),x=Math.floor(Date.now()/1e3)+90*24*60*60,A=`USER#${s}`,R=`DATE#${r}`,G={userId:A,timestamp:R,rawUserId:s,status:d,time:p,date:r,ttl:x,userName:a||s,userImage:l||null,usedFlags:y!==void 0?y:null,bombsExploded:u!==void 0?u:null,noFlagWin:o!==void 0?o:null,timePlayed:b!==void 0?b:null,cellsRevealed:I!==void 0?I:null,gameRestarts:E!==void 0?E:null};await T.send(new g.PutCommand({TableName:P,Item:G}));try{await Y({userId:s,userName:a||s,userImage:l||null,status:d,timePlayed:b!==void 0?b:p,cellsRevealed:I!==void 0?I:0,usedFlags:y!==void 0?y:0,bombsExploded:u!==void 0?u:0,noFlagWin:o===!0,gameTime:p>0?p:0,gameRestarts:E!==void 0?E:0})}catch(w){console.error("Error updating user stats:",w)}if(d==="success"&&p>0)try{let w="BEST",S=`BEST#${s}`,N=await T.send(new g.QueryCommand({TableName:P,KeyConditionExpression:"userId = :pk AND #ts = :sk",ExpressionAttributeValues:{":pk":w,":sk":S},ExpressionAttributeNames:{"#ts":"timestamp"}})),h=N.Items&&N.Items.length>0?N.Items[0]:null;if(!h||p<h.time){let C={userId:w,timestamp:S,rawUserId:s,time:p,date:r,ttl:Math.floor(Date.now()/1e3)+31536e3,userName:a||s,userImage:l||null,usedFlags:y!==void 0?y:null,noFlagWin:o!==void 0?o:null,timePlayed:b!==void 0?b:null,cellsRevealed:I!==void 0?I:null,gameRestarts:E!==void 0?E:null};await T.send(new g.PutCommand({TableName:P,Item:C}))}}catch(w){console.error("Error checking/updating best time:",w)}return{statusCode:200,headers:f,body:JSON.stringify({message:"Game saved successfully"})}}async function k(t){let n=t.queryStringParameters?.userId,s=t.queryStringParameters?.status,d=t.queryStringParameters?.limit?parseInt(t.queryStringParameters.limit):100;try{if(n){let a=`USER#${n}`,l={TableName:P,KeyConditionExpression:"userId = :userId AND begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":userId":a,":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},ScanIndexForward:!1,Limit:s==="success"?void 0:d};s&&(l.FilterExpression="#st = :status",l.ExpressionAttributeValues[":status"]=s,l.ExpressionAttributeNames["#st"]="status");let u=((await T.send(new g.QueryCommand(l))).Items||[]).map(o=>({...o,userId:o.rawUserId||(o.userId.startsWith("USER#")?o.userId.substring(5):o.userId),displayTimestamp:o.timestamp.startsWith("DATE#")?o.timestamp.substring(5):o.timestamp}));return s==="success"&&(u=u.sort((o,b)=>o.time-b.time).slice(0,d)),{statusCode:200,headers:f,body:JSON.stringify(u)}}let e={TableName:P,FilterExpression:"begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},Limit:d};s&&(e.FilterExpression+=" AND #st = :status",e.ExpressionAttributeValues[":status"]=s,e.ExpressionAttributeNames["#st"]="status");let c=((await T.send(new g.ScanCommand(e))).Items||[]).map(a=>({...a,userId:a.rawUserId||(a.userId.startsWith("USER#")?a.userId.substring(5):a.userId),displayTimestamp:a.timestamp.startsWith("DATE#")?a.timestamp.substring(5):a.timestamp}));return{statusCode:200,headers:f,body:JSON.stringify(c)}}catch(e){return console.error("Error fetching games:",e),{statusCode:500,headers:f,body:JSON.stringify({message:"Error fetching games",error:e instanceof Error?e.message:String(e)})}}}async function z(t){let n=t.queryStringParameters?.limit?parseInt(t.queryStringParameters.limit):10;try{let s={TableName:P,KeyConditionExpression:"userId = :best",ExpressionAttributeValues:{":best":"BEST"}},c=((await T.send(new g.QueryCommand(s))).Items||[]).sort((a,l)=>a.time-l.time).slice(0,n).map((a,l)=>{let y=a.rawUserId||(a.timestamp.startsWith("BEST#")?a.timestamp.substring(5):"");return{rank:l+1,userId:y,userName:a.userName||y,userImage:a.userImage||null,time:a.time,date:a.date}});return{statusCode:200,headers:f,body:JSON.stringify(c)}}catch(s){return console.error("Error fetching leaderboard:",s),{statusCode:500,headers:f,body:JSON.stringify({message:"Error fetching leaderboard",error:s instanceof Error?s.message:String(s)})}}}async function X(t){try{let s={TableName:P,KeyConditionExpression:"userId = :best",ExpressionAttributeValues:{":best":"BEST"}},c=((await T.send(new g.QueryCommand(s))).Items||[]).sort((o,b)=>o.time-b.time).map((o,b)=>{let I=o.rawUserId||(o.timestamp.startsWith("BEST#")?o.timestamp.substring(5):"");return{rank:b+1,userId:I,userName:o.userName||I,userImage:o.userImage||null,time:o.time,date:o.date}}),a=c.findIndex(o=>o.userId===t);if(a===-1)return{statusCode:200,headers:f,body:JSON.stringify([])};let l=Math.max(0,a-2),y=Math.min(c.length-1,a+2),u=c.slice(l,y+1);return{statusCode:200,headers:f,body:JSON.stringify(u)}}catch(s){return console.error("Error fetching user leaderboard context:",s),{statusCode:500,headers:f,body:JSON.stringify({message:"Error fetching user leaderboard context",error:s instanceof Error?s.message:String(s)})}}}async function j(t){try{let n=`STAT#${t}`,s="STAT",d=await T.send(new g.GetCommand({TableName:P,Key:{userId:n,timestamp:s}}));if(d.Item){let e=d.Item,m=e.gamesPlayed>0?Math.round(e.gamesWon/e.gamesPlayed*100):0,c=e.gamesPlayed>0?Math.round(e.totalTimePlayed/e.gamesPlayed):0,a=e.gamesWon>0&&e.totalWinTime>0?Math.round(e.totalWinTime/e.gamesWon):0;return{statusCode:200,headers:f,body:JSON.stringify({userId:t,userName:e.userName||t,userImage:e.userImage,totalGames:e.gamesPlayed,wins:e.gamesWon,losses:e.gamesLost,winRate:m,fastestWin:e.fastestWin||0,averageWinTime:a,bombsExploded:e.totalBombsExploded||0,noFlagWins:e.noFlagWins||0,timePlayed:e.totalTimePlayed,averageGameTime:c,totalCellsRevealed:e.totalCellsRevealed||0,gameRestarts:e.totalGameRestarts||0,abandonedGames:e.gamesAbandoned||0,restartedGames:e.gamesRestarted||0,totalFlagsUsed:e.totalFlagsPlaced||0,recentGames:e.recentGames||await H(t,5)})}}return await F(t)}catch(n){return console.error(`Error in getUserStats for ${t}:`,n),await F(t)}}async function H(t,n=5){try{let s=`USER#${t}`,d={TableName:P,KeyConditionExpression:"userId = :userId AND begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":userId":s,":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"},ScanIndexForward:!1,Limit:n};return((await T.send(new g.QueryCommand(d))).Items||[]).map(m=>({...m,userId:m.rawUserId||(m.userId.startsWith("USER#")?m.userId.substring(5):m.userId)}))}catch(s){return console.error(`Error fetching recent games for user ${t}:`,s),[]}}async function F(t){let n=`USER#${t}`,s={TableName:P,KeyConditionExpression:"userId = :userId",ExpressionAttributeValues:{":userId":n}},e=(await T.send(new g.QueryCommand(s))).Items||[],m={TableName:P,KeyConditionExpression:"userId = :best AND #ts = :sk",ExpressionAttributeValues:{":best":"BEST",":sk":`BEST#${t}`},ExpressionAttributeNames:{"#ts":"timestamp"}},c=await T.send(new g.QueryCommand(m)),a=c.Items&&c.Items.length>0?c.Items[0]:null,l=0,y=0,u=0,o=a?a.time:Number.MAX_SAFE_INTEGER,b=0,I=0,E=a?.userName||t,r=a?.userImage||null,p=0,x=0,A=0,R=0,G=0,w=0,S=0,N=0,h=0,C=e.filter(i=>i.timestamp.startsWith("DATE#"));l=C.length,C.forEach(i=>{i.userName&&!E&&(E=i.userName),i.userImage&&!r&&(r=i.userImage),i.bombsExploded&&(p+=i.bombsExploded),i.status==="success"&&i.noFlagWin===!0&&x++,i.timePlayed&&typeof i.timePlayed=="number"&&(A+=i.timePlayed,R++),i.cellsRevealed&&typeof i.cellsRevealed=="number"&&(G+=i.cellsRevealed),i.gameRestarts&&typeof i.gameRestarts=="number"&&(w+=i.gameRestarts),i.usedFlags&&typeof i.usedFlags=="number"&&(h+=i.usedFlags),i.status==="success"?(y++,I+=i.time||0,a||(o=Math.min(o,i.time||Number.MAX_SAFE_INTEGER))):i.status==="defeat"?u++:i.status==="abandoned"?S++:i.status==="restarted"&&N++}),b=y>0?Math.round(I/y):0;let D=R>0?Math.round(A/R):0;o===Number.MAX_SAFE_INTEGER&&(o=0);let O={userId:t,userName:E,userImage:r,totalGames:l,wins:y,losses:u,winRate:l>0?Math.round(y/l*100):0,fastestWin:o,averageWinTime:b,bombsExploded:p,noFlagWins:x,timePlayed:A,averageGameTime:D,totalCellsRevealed:G,gameRestarts:w,abandonedGames:S,restartedGames:N,recentGames:C.sort((i,_)=>_.timestamp.localeCompare(i.timestamp)).slice(0,5).map(i=>({...i,userId:i.rawUserId||t})),totalFlagsUsed:h};return{statusCode:200,headers:f,body:JSON.stringify(O)}}async function Q(t,n=5){try{let s=[],d={TableName:P,KeyConditionExpression:"userId = :best AND #ts = :sk",ExpressionAttributeValues:{":best":"BEST",":sk":`BEST#${t}`},ExpressionAttributeNames:{"#ts":"timestamp"}},e=await T.send(new g.QueryCommand(d)),m=e.Items&&e.Items.length>0?e.Items[0]:null;m&&m.time>0&&s.push({...m,userId:m.rawUserId||t,status:"success",date:m.date||new Date().toISOString()});let c=`USER#${t}`,a={TableName:P,KeyConditionExpression:"userId = :userId AND begins_with(#ts, :datePrefix)",ExpressionAttributeValues:{":userId":c,":datePrefix":"DATE#"},ExpressionAttributeNames:{"#ts":"timestamp"}},o=((await T.send(new g.QueryCommand(a))).Items||[]).map(r=>({...r,userId:r.rawUserId||(r.userId.startsWith("USER#")?r.userId.substring(5):r.userId),date:r.date||(r.timestamp.startsWith("DATE#")?r.timestamp.substring(5):r.timestamp),displayTimestamp:r.timestamp.startsWith("DATE#")?r.timestamp.substring(5):r.timestamp})).filter(r=>{let p=r.time&&r.time>0||r.successTime&&r.successTime>0||r.winTime&&r.winTime>0;return r.status==="success"&&p}).map(r=>({...r,time:r.time||r.successTime||r.winTime||0,date:r.date||new Date(r.displayTimestamp).toISOString()}));s.push(...o);let b=[],I=new Set;for(let r of s){let p=`${r.time}-${r.date}`;I.has(p)||(I.add(p),b.push(r))}let E=b.sort((r,p)=>r.time-p.time).slice(0,n);return console.log(`Found ${E.length} best games for user ${t}`),{statusCode:200,headers:f,body:JSON.stringify(E)}}catch(s){return console.error(`Error fetching best games for user ${t}:`,s),{statusCode:500,headers:f,body:JSON.stringify({message:"Error fetching best games",error:s instanceof Error?s.message:String(s)})}}}async function Y(t){let{userId:n,userName:s,userImage:d,status:e,timePlayed:m,cellsRevealed:c,usedFlags:a,bombsExploded:l,noFlagWin:y,gameTime:u,gameRestarts:o}=t,b=`STAT#${n}`,I="STAT",E=await T.send(new g.GetCommand({TableName:P,Key:{userId:b,timestamp:I}})),r=Math.floor(Date.now()/1e3)+365*24*60*60;if(!E.Item){let h={userId:b,timestamp:I,rawUserId:n,userName:s,userImage:d,gamesPlayed:1,gamesWon:e==="success"?1:0,gamesLost:e==="defeat"?1:0,gamesAbandoned:e==="abandoned"?1:0,gamesRestarted:e==="restarted"?1:0,totalTimePlayed:m>0?m:0,totalCellsRevealed:c>0?c:0,totalFlagsPlaced:a>0?a:0,totalBombsExploded:l>0?l:0,noFlagWins:e==="success"&&y?1:0,fastestWin:e==="success"&&u>0?u:null,totalWinTime:e==="success"&&u>0?u:0,totalGameRestarts:o>0?o:0,lastUpdated:new Date().toISOString(),ttl:r};await T.send(new g.PutCommand({TableName:P,Item:h}));return}let p=E.Item,x=e==="success",A=e==="defeat",R=e==="abandoned",G=e==="restarted",w=p.fastestWin||null;x&&u>0&&(!w||u<w)&&(w=u);let S=p.recentGames||[],N={status:e,time:u,date:new Date().toISOString(),usedFlags:a,cellsRevealed:c,bombsExploded:l};S.unshift(N),S=S.slice(0,5),await T.send(new g.UpdateCommand({TableName:P,Key:{userId:b,timestamp:I},UpdateExpression:`
      SET gamesPlayed = gamesPlayed + :one, 
      gamesWon = gamesWon + :win, 
      gamesLost = gamesLost + :loss,
      gamesAbandoned = gamesAbandoned + :abandoned,
      gamesRestarted = gamesRestarted + :restarted,
      totalTimePlayed = if_not_exists(totalTimePlayed, :zero) + :timePlayed,
      totalCellsRevealed = if_not_exists(totalCellsRevealed, :zero) + :cellsRevealed,
      totalFlagsPlaced = if_not_exists(totalFlagsPlaced, :zero) + :usedFlags,
      totalBombsExploded = if_not_exists(totalBombsExploded, :zero) + :bombsExploded,
      noFlagWins = noFlagWins + :noFlagWin,
      totalWinTime = if_not_exists(totalWinTime, :zero) + :winTime,
      totalGameRestarts = if_not_exists(totalGameRestarts, :zero) + :gameRestarts,
      fastestWin = :fastestWin,
      userName = :userName,
      userImage = :userImage,
      lastUpdated = :now,
      ttl = :ttl,
      recentGames = :recentGames
    `,ExpressionAttributeValues:{":one":1,":win":x?1:0,":loss":A?1:0,":abandoned":R?1:0,":restarted":G?1:0,":zero":0,":timePlayed":m>0?m:0,":cellsRevealed":c>0?c:0,":usedFlags":a>0?a:0,":bombsExploded":l>0?l:0,":noFlagWin":x&&y?1:0,":winTime":x&&u>0?u:0,":gameRestarts":o>0?o:0,":fastestWin":w,":userName":s,":userImage":d,":now":new Date().toISOString(),":ttl":r,":recentGames":S}}))}0&&(module.exports={handler});
